# #!/usr/bin/perl
snippet #!
	#!/usr/bin/perl
	
# Hash Pointer
snippet .
	 =>
# Function
snippet sub
	=head2 $1($2)

	=cut

	sub ${1:function_name} {
		my (${2:$foo}) = @_;
		${3:#body ...}
	}
# Function
snippet ssub
	=head2 $self->$1($2)

	=cut

	sub ${1:function_name} {
		my ($self, ${2:$foo}) = @_;
		${3:#body ...}
	}
# Function
snippet suba
	sub ${1:function_name} {
		my ($${2:arg1}, $${3:arg2}, $${4:arg3}) = @_;
		${5:#body ...}
	}
# Conditional
snippet if
	if (${1}) {
		${2:# body...}
	}
# Conditional if..else
snippet ife
	if (${1}) {
		${2:# body...}
	}
	else {
		${3:# else...}
	}
# Conditional if..elsif..else
snippet ifee
	if (${1}) {
		${2:# body...}
	}
	elsif (${3}) {
		${4:# elsif...}
	}
	else {
		${5:# else...}
	}
# Conditional One-line
snippet xif
	${1:expression} if ${2:condition};${3}
# Unless conditional
snippet unless
	unless (${1}) {
		${2:# body...}
	}
# Unless conditional One-line
snippet xunless
	${1:expression} unless ${2:condition};${3}
# Try/Except
snippet eval
	eval {
		${1:# do something risky...}
	};
	if ($@) {
		${2:# handle failure...}
	}
# While Loop
snippet wh
	while (${1}) {
		${2:# body...}
	}
# While Loop One-line
snippet xwh
	${1:expression} while ${2:condition};${3}
# For Loop
snippet for
	for (my $${2:var} = 0; $$2 < ${1:count}; $$2${3:++}) {
		${4:# body...}
	}
# Foreach Loop
snippet fore
	foreach my $${1:x} (@${2:array}) {
	  ${3:# body...}
	}
# Foreach Loop One-line
snippet xfore
	${1:expression} foreach @${2:array};${3}
# Package
snippet cl
	package ${1:ClassName};
	
	use base qw(${2:ParentClass});
	
	sub new {
		my $class = shift;
		$class = ref $class if ref $class;
		my $self = bless {}, $class;
		$self;
	}
	
	1;${3}
# Read File
snippet open 
	open my $${1:io_handle}, '${2:<}', $${3:filename}
	  or croak "Couldn't open $$3: $!";
# For keys 
snippet whilee 
	while(my ($${1:key}, $${2:value}) = each(%${3:hash})) {
	  ${4:# body...}
	}
# Read File
snippet slurp
	my $${1:var};
	{ local $/ = undef; local *FILE; open FILE, "<${2:file}"; $$1 = <FILE>; close FILE }${3}
snippet s
	$self->
snippet hr
	$${1}->{${2}}${3}
snippet has
	has '${1:varname}' => (
	  is      => 'r${2}',
	  isa     => '${3}',
	  default => sub { ${4} }',
	);

snippet csub
	sub ${1:function_name} {
	  my ($self) = @_;
	  ${2:#body ...}
	}

snippet csubd
	=head2 ${1:sub_name}()
	
	${2:Description}
	
	=cut
	sub $1 {
	  my ($self) = @_;
	  ${3:#body ...}
	}

snippet csubbd
	=head2 ${1:sub_name}(${2:param1})
	
	${3:Description}
	
	=cut
	sub $1 {
	  my ($self, $2) = @_;
	  ${4:#body ...}
	}

# Sub Documentation
snippet sd
	=head2 ${1:sub_name}(${2:params})
	
	${3:Descriptoin}
	
	Returns: ${4} 
	
	=cut

# Sub Documentation
snippet basename
	my ($name,$path,$suffix) = fileparse(${1:full_filename}, ${2:suffix_list});

snippet h1
	=head1 ${1:title}

snippet h2
	=head2 ${1:title}

snippet h3
	=head3 ${1:title}

snippet h4
	=head4 ${1:title}

snippet cut
	=cut

snippet ul
	=over 4

	=item *
	
	${1:text}

	=back

snippet ol
	=over 4

	=item 1
	
	${1:text}

	=back
